---
 - name: Register variables through shell scripts
   #hosts: CV_LCL
   hosts: CRON_DEPLOY
   #hosts: CV
   gather_facts: true
   become: true
   vars:
   tasks:
   - name: Register axiom user home directory
     shell: getent passwd axiom | awk -F ':' '{print $6}'
     register: USR_HOME
   - set_fact:
       CV_USR_HOME: "{{ USR_HOME.stdout }}"

   - name: Register a common port for CV10
     shell: ss -lnt | grep "9999" | sed -n 's/^.*9999/9999/gp' | awk '{print $1}' 
     register: CV10_PORT
   - set_fact:
       CV10S_PORT: "{{ CV10_PORT.stdout }}"

   - name: Register a common port for CV9
     shell: ss -lnt | grep "5005" | sed -n 's/^.*5005/5005/gp' | awk '{print $1}' 
     register: CV9_PORT
   - set_fact:
       CV9S_PORT: "{{ CV9_PORT.stdout }}"

   - name: Register a common port for Tomcat
     shell: ss -lnt | grep "8000" | sed -n 's/^.*8000/8000/gp' | awk '{print $1}'
     register: TOMCAT_PORT
   - set_fact:
       TM_PORT: "{{ TOMCAT_PORT.stdout }}"

   - name: Register Tomcat service
     shell: systemctl list-units | grep Tomcat | grep active | awk -F ' ' '{print $1}'
     register: TOMCAT_SERVICE
     when: (TM_PORT == "8000")

   - name: Register Tomcat installation directory
     shell: systemctl cat "{{ TOMCAT_SERVICE.stdout }}" | grep "ExecStart=" | awk -F '=' '{print $2}' | awk -F '/bin/startup.sh' '{print $1}'
     register: TOMCAT_DIR
     when: (TM_PORT == "8000")

   - name: Register Tomcat log directory
     shell: cat "{{ TOMCAT_DIR.stdout }}"/conf/server.xml | grep "directory=" | tr -d '"' | awk -F '=' '{print $NF}'
     register: TOMCAT_LOG_DIR
     when: (TM_PORT == "8000")

   - name: Check to see if UIKIT has already been installed on the server
     stat:
       path: "{{ TOMCAT_DIR.stdout }}/webapps/ui_kit.war"
     register: UIKIT_WAR
     when: (TM_PORT == "8000")

   - name: Register absolute path for parameters.cfg file for Tomcat
     shell: find "{{ TOMCAT_DIR.stdout }}"/ -type f -name parameters.cfg
     register: PARAMETERS_CFG
     when: (TM_PORT == "8000")

   - name: Register TOMCAT TMP directory
     shell: grep "^tmp.dir=" "{{ PARAMETERS_CFG.stdout }}" | awk -F '=' '{print $NF}'
     register: TOMCAT_TMP_DIR
     when: (TM_PORT == "8000") and UIKIT_WAR.stat.exists == False     

   - name: Register CV9 service
     shell: grep -ir "AXIOM_HOME=" /etc/init.d/ | awk -F ':' '{print $1}' | awk -F '/' '{print $NF}'
     register: CV9_SERVICE
     when: (CV9S_PORT == "5005") and (CV10S_PORT != "9999")

   - name: Register CV10 service
     shell: systemctl list-units | grep AxiomServer | grep active | awk -F ' ' '{print $1}'
     register: CV10_SERVICE
     when: (CV10S_PORT == "9999")

   - name: Register CV9 installation directory
     shell: cat /etc/init.d/"{{ CV9_SERVICE.stdout }}" | grep "AXIOM_HOME=" | awk -F '=' '{print $NF}'
     register: CV9_DIR
     when: (CV9S_PORT == "5005") and (CV10S_PORT != "9999")

   - name: Register CV10 installation directory
     shell: systemctl cat "{{ CV10_SERVICE.stdout }}" | grep "ExecStart=" | awk -F '=' '{print $2}' | awk -F '/server-bin' '{print $1}'
     register: CV10_DIR
     when: (CV10S_PORT == "9999")

   - name: Register CV9 log directory
     shell: cat "{{ CV9_DIR.stdout }}"/bin/set_env.sh | grep "LOG_DIR=" | awk -F '"' '{print $2}'
     register: CV9_LOG_DIR
     when: (CV9S_PORT == "5005") and (CV10S_PORT != "9999")

   - name: Register CV10 log directory
     shell: cat "{{ CV10_DIR.stdout }}"/server-config/server.properties | grep "log.dir=" | awk -F '=' '{print $NF}'
     register: CV10_LOG_DIR
     when: (CV10S_PORT == "9999")

   - name: Register CV9 backup directory
     shell: cat "{{ CV9_DIR.stdout }}"/bin/set_env.sh | grep "ARCHIVAL_DIR=" | awk -F '"' '{print $2}'
     register: CV9_BKP_DIR
     when: (CV9S_PORT == "5005") and (CV10S_PORT != "9999")

   - name: Register CV10 backup directory
     shell: cat "{{ CV10_DIR.stdout }}"/server-config/client-install.properties | grep "backup.dir=" | awk -F '=' '{print $NF}'
     register: CV10_BKP_DIR
     when: (CV10S_PORT == "9999")

   - name: Register CV9 TMP directory
     shell: cat "{{ CV9_DIR.stdout }}"/bin/set_env.sh | grep "TEMP_DIR=" | awk -F '"' '{print $2}'
     register: CV9_TMP_DIR
     when: (CV9S_PORT == "5005") and (CV10S_PORT != "9999")

   - name: Register CV10 TMP directory
     shell: cat "{{ CV10_DIR.stdout }}"/server-config/server.properties | grep "tmp.dir=" | awk -F '=' '{print $NF}'
     register: CV10_TMP_DIR
     when: (CV10S_PORT == "9999")

   - name: Print variables for CV9
     debug:
       msg: 
        - Axiom User Home:- "{{ USR_HOME.stdout }}"
        - CV9 Server Port:- "{{ CV9_PORT.stdout }}"
        - CV9 Service Name:- "{{ CV9_SERVICE.stdout }}"
        - CV9 Installation Directory:- "{{ CV9_DIR.stdout }}"
        - CV9 LOG Directory:- "{{ CV9_LOG_DIR.stdout }}"
        - CV9 Backup Directory:- "{{ CV9_BKP_DIR.stdout }}"
        - CV9 TMP Directory:- "{{ CV9_TMP_DIR.stdout }}"
     when: (CV9S_PORT == "5005") and (CV10S_PORT != "9999")

   - name: Print variables for CV10
     debug:
       msg:
        - Axiom User Home:- "{{ USR_HOME.stdout }}"
        - CV10 Server Port:- "{{ CV10_PORT.stdout }}"
        - CV10 Service Name:- "{{ CV10_SERVICE.stdout }}"
        - CV10 Installation Directory:- "{{ CV10_DIR.stdout }}"
        - CV10 LOG Directory:- "{{ CV10_LOG_DIR.stdout }}"
        - CV10 Backup Directory:- "{{ CV10_BKP_DIR.stdout }}"
        - CV10 TMP Directory:- "{{ CV10_TMP_DIR.stdout }}"
     when: (CV10S_PORT == "9999")

   - name: Print variables for Tomcat
     debug:
       msg:
        - TOMCAT Port:- "{{ TOMCAT_PORT.stdout }}"
        - TOMCAT SERVICE:- "{{ TOMCAT_SERVICE.stdout }}"
        - TOMCAT Install Directory:- "{{ TOMCAT_DIR.stdout }}"
        - TOMCAT LOG Directory:- "{{ TOMCAT_LOG_DIR.stdout }}"
     when: (TM_PORT == "8000")

   - name: Print variables for Tomcat TMP directory
     debug:
       msg:
        - TOMCAT TMP Directory:- "{{ TOMCAT_TMP_DIR.stdout }}"
     when: (TM_PORT == "8000") and UIKIT_WAR.stat.exists == False

   - name: Print variables for Tomcat TMP directory when UIKIT is installed
     debug:
       msg:
        - TOMCAT TMP Directory:- "{{ TOMCAT_DIR.stdout }}/temp"
     when: (TM_PORT == "8000") and UIKIT_WAR.stat.exists == True
